//
//  DetailToDoInteractor.swift
//  CleanToDo
//
//  Created by 재영 on 2022/02/09.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DetailToDoBusinessLogic {
  func getToDo(request: DetailToDo.GetToDo.Request)
  func deleteToDo(request: DetailToDo.DeleteToDo.Request)
  func updateToDo(request: DetailToDo.UpdateToDo.Request)
}

protocol DetailToDoDataStore {
  var todo: ToDo? { get set }
}

class DetailToDoInteractor: DetailToDoBusinessLogic, DetailToDoDataStore {
  var presenter: DetailToDoPresentationLogic?
  var worker: DetailToDoWorkerLogic?
  var todo: ToDo?
  
  func getToDo(request: DetailToDo.GetToDo.Request) {
    guard let todo = todo else {
      print("Should receive ToDo from ListToDosInteractor.")
      return
    }
    
    let response = DetailToDo.GetToDo.Response(todo: todo)
    presenter?.presentToDo(response: response)
  }
  
  func deleteToDo(request: DetailToDo.DeleteToDo.Request) {
    guard let todo = todo else {
      print("Should receive ToDo from ListToDosInteractor.")
      return
    }
    
    worker?.deleteToDo(id: todo.id) { error in
      let response = DetailToDo.DeleteToDo.Response(error: error)
      self.presenter?.deleteToDo(response: response)
    }
  }
  
  func updateToDo(request: DetailToDo.UpdateToDo.Request) {
    worker?.updateToDo(todo: request.todo) { error, todo in
      let response = DetailToDo.UpdateToDo.Response(error: error, todo: todo)
      self.presenter?.updateToDo(response: response)
      self.todo = todo
    }
  }
}
